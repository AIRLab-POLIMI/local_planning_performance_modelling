run_index: &id001 [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
#run_index: &id001 [4]
run_replication_index: &id003 [0]

environment_name: &id002 [7A-2]
#environment_name: &id002 [7A-2, airlab, fr079, intel, mexico, office_b]

combinatorial_parameters: [
  # {
  #   robot_model: [turtlebot3_waffle_performance_modelling],
  #   odometry_error: [[0.0, 0.0, 0.0, 0.0]],
  #   amcl_alpha_factor: [0],
  #   localization_node: [amcl],
  #   local_planner_node: [arena],
  #   global_planner_node: [global_planner],
  #   run_index: *id001,
  #   run_replication_index: *id003,
  #   environment_name: *id002,
  #   pedestrian_number: [5],
  #   pedestrian_max_vel: [0.3],  
  # },
  #{
  #  robot_model: [turtlebot3_waffle_performance_modelling],
  # odometry_error: [[0.02, 0.0, 0.02, 0.0], [0.05, 0.0, 0.05, 0.0], [0.1, 0.0, 0.1, 0.0]],
  #  amcl_alpha_factor: [1.0],
  #  localization_node: [amcl],
  #  local_planner_node: [arena],
  #  global_planner_node: [global_planner],
  #  run_index: *id001,
  #  environment_name: *id002,
  #},
  {
    robot_model: [turtlebot3_waffle_performance_modelling],
    # odometry_error: [[0.02, 0.0, 0.02, 0.0], [0.05, 0.0, 0.05, 0.0], [0.1, 0.0, 0.1, 0.0]],
    odometry_error: [[0.1, 0.0, 0.1, 0.0]], # 0.1 = 10% di errore. [v, correlazione tra v e w = 0, w, correlazione tra w e v = 0] odom legge la velocità come v_eff + v, questo per rendere più realistica la simulazione ()
    amcl_alpha_factor: [1.0],
    localization_node: [amcl],
    local_planner_node: [arena],
    global_planner_node: [global_planner],
    run_index: *id001,
    run_replication_index: *id003,
    environment_name: *id002,
    pedestrian_number: [5],
    pedestrian_max_vel: [0.3], 
  },
]
